library(devtools)
install_github("ropensci/rcrossref")
library(devtools)
install.packages(devtools)
install.packages()
install.packages('devtools')
install.packages('devtools', dependencies = TRUE)
install.packages('devtools', dependencies = TRUE)
library(devtools)
install_github("ropensci/rcrossref")
install_github("noamross/pubtime", auth_user=rossmounce, auth_token=3556ab167560b0139fc95cf4022c5d96278045ae)
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history(http://dx.doi.org/10.1371/journal.pone.0098412)
get_pub_history('http://dx.doi.org/10.1371/journal.pone.0098412')
get_pub_history('10.1371/journal.pone.0098412')
library(devtools)
#install_github("ropensci/rcrossref")
#install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history('10.1371/journal.pone.0098412')
library(devtools)
#install_github("ropensci/rcrossref")
#install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history('10.1007/s10021-005-0135-1')
get_pub_history('10.1371/journal.pone.0098412')
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(devtools)
#install_github("ropensci/rcrossref")
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history('10.1371/journal.pone.0098412')
get_pub_history('http://dx.doi.org/10.1371/journal.pone.0098412')
get_pub_history('http://www.dx.doi.org/10.1371/journal.pone.0098412')
get_pub_history('10.1371/journal.pone.0098412')
?get_pub_history
get_pub_history(10.1371/journal.pone.0098412)
threeplos <- c('10.1371/journal.pone.0098412','10.1371/journal.pone.0088834','10.1371/journal.pone.0088799')
str(threeplos)
get_pub_history(threeplos)
get_pub_history("10.1371/journal.pone.0098412")
threeplos <- c("10.1371/journal.pone.0098412","10.1371/journal.pone.0088834","10.1371/journal.pone.0088799")
get_pub_history(threeplos)
get_pub_history(c("10.1525/cond.2013.110151", "10.1525/cond.2009.080086", "10.1890/12-0229.1",
"10.1890/02-0266", "10.1890/12-1881.1", "10.1890/04-1677", "10.1890/09-1541.1",
"10.1890/02-0297", "10.1890/ES13-00269.1", "10.1890/ES10-00002.1",
"10.1086/675716", "10.1086/648554", "10.7717/peerj.338", "10.7717/peerj.407",
"10.1371/journal.pone.0041809", "10.1371/journal.pone.0023528",
"10.1371/journal.pcbi.1000286", "10.1371/journal.pcbi.1002791",
"10.1371/journal.pbio.1001487", "10.1371/journal.pbio.0000037",
"10.1371/journal.pmed.0050194", "10.1371/journal.pmed.1000303",
"10.1371/journal.ppat.1001068", "10.1371/journal.ppat.1002796",
"10.1371/journal.pntd.0001658", "10.1371/journal.pntd.0000552",
"10.1371/journal.pgen.0030047", "10.1371/journal.pgen.0030163",
"10.1098/rspb.2013.2286", "10.1098/rspb.2012.0230", "10.1098/rsbl.2014.0206",
"10.1098/rsbl.2011.1059", "10.1007/s10021-002-0108-6", "10.1007/s10021-012-9541-3",
"10.1007/s12080-008-0023-3", "10.1007/s12080-013-0198-0", "10.1111/ele.12233",
"10.1046/j.1461-0248.2003.00475.x", "10.1111/1365-2745.12168",
"10.1046/j.1365-2745.2002.00707.x"))
#ecosystems
get_pub_history(c("10.1525/cond.2013.110151", "10.1525/cond.2009.080086", "10.1890/12-0229.1"))
get_pub_history("10.1371/journal.pone.0098412")
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history("10.1371/journal.pone.0098412")
get_pub_history(c("10.1525/cond.2013.110151", "10.1525/cond.2009.080086", "10.1890/12-0229.1"))
library(devtools)
#install_github("ropensci/rcrossref")
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history("10.1371/journal.pone.0098412")
get_pub_history(c("10.1525/cond.2013.110151", "10.1525/cond.2009.080086", "10.1890/12-0229.1"))
get_dois(1540-9295,2013)
get_dois("1540-9295",2013)
get_dois("1540-9295",2012-2013) #119
get_dois("1540-9295",c(2012,2013)) #119
get_dois("2296-701X",c(2013,2014)) #Frontiers in Ecology & Evolution
x <- get_dois("2296-701X",c(2013,2014))
str(x)
pwd()
getwd()
library(devtools)
#install_github("ropensci/rcrossref")
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
library(pubtime)
get_pub_history("10.1371/journal.pone.0098412")
get_pub_history('10.1007/s10021-005-0105-7')
?get_pub_history
?get_pub_history
get_dois("1540-9295",2013) #119
x <- get_dois("2296-701X",c(2013,2014))
str(x)
library(devtools)
#install_github("ropensci/rcrossref")
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
source('~/.active-rstudio-document')
View(test_data3)
View(test_data2)
View(test_data3)
install.packages("devtools")
require(devtools)
require(pubtime)
x <- get_dois("1537-5323",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1442-9993",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1465-7279",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
library(pubtime)
x <- get_dois("1465-7279",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1744-957X",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1051-0761",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("0012-9615",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1461-0248",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
x <- get_dois("2150-8925",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
x <- get_dois("2041-210X",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1432-1939",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("2167-8359",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
#671 for austral ecology
#1776 behaviour ecology 1465-7279
x <- get_dois("2150-8925",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1435-0629",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1365-2656",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1365-2664",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1365-2745",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1461-0248",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
x <- get_dois("1471-2954",c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013))
str(x)
require(devtools)
require(pubtime)
require(stringi)
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
require(pubtime)
require(stringi)
DOIS_FILE = ross_dois.txt
DOIS_FILE = "ross_dois.txt"
# Get DOIs
dois = scan(system.file("scraper_scripts", DOIS_FILE, package="pubtime"),
what=character(), sep="\n")
# Split into sample and main samples
sample_vals = sample(1:length(dois), 150)
sample_dois = dois[sample_vals]
main_dois = dois[-sample_vals]
# TESTING: Run this prior to the main run to check everything is OK.
# Estimated time: 20 mins
# -----------------------
get_pub_history(dois_sample,
file=paste0(stri_match_first_regex(DOIS_FILE, "\\w+(?=.txt)"),
"_sample.csv"))
# Save the session data
writeLines(paste("##", capture.output(sessionInfo())),
paste0(DOIS_FILE, "_sample_sessionInfo.txt"))
sample_vals = sample(1:length(dois), 150)
sample_dois = dois[sample_vals]
main_dois = dois[-sample_vals]
# TESTING: Run this prior to the main run to check everything is OK.
# Estimated time: 20 mins
# -----------------------
get_pub_history(dois_sample,
file=paste0(stri_match_first_regex(DOIS_FILE, "\\w+(?=.txt)"),
"_sample.csv"))
# Save the session data
writeLines(paste("##", capture.output(sessionInfo())),
paste0(DOIS_FILE, "_sample_sessionInfo.txt"))
get_pub_history(sample_dois,
file=paste0(stri_match_first_regex(DOIS_FILE, "\\w+(?=.txt)"),
"_sample.csv"))
# Save the session data
writeLines(paste("##", capture.output(sessionInfo())),
paste0(DOIS_FILE, "_sample_sessionInfo.txt"))
require(devtools)
install_github("noamross/pubtime", auth_user='rossmounce', auth_token='3556ab167560b0139fc95cf4022c5d96278045ae')
require(pubtime)
require(stringi)
#Load in the appropriate file:
DOIS_FILE = "ross_dois.txt"
# Get DOIs
dois = scan(system.file("scraper_scripts", DOIS_FILE, package="pubtime"),
what=character(), sep="\n")
# Split into sample and main samples
sample_vals = sample(1:length(dois), 150)
sample_dois = dois[sample_vals]
main_dois = dois[-sample_vals]
get_pub_history(main_dois,
file=paste0(stri_match_first_regex(DOIS_FILE, "\\w+(?=.txt)"),
"_main.csv"))
writeLines(paste("##", capture.output(sessionInfo())),
paste0(DOIS_FILE, "_main_sessionInfo.txt"))
devtools::install_github("sckott/cowsay")
library("cowsay")
#Does this work?
say("asdfsf", "longcat", length = 4)
library(ape)
install.packages("ape")
library(ape)
#http://www.inside-r.org/packages/cran/ape/docs/read.GenBank
ref <- c("U15717", "U15718", "U15719", "U15720",
"U15721", "U15722", "U15723", "U15724")
### Copy/paste or type the following commands if you
### want to try them.
## Not run:
Rampho <- read.GenBank(ref)
### get the species names:
attr(Rampho, "species")
### build a matrix with the species names and the accession numbers:
cbind(attr(Rampho, "species"), names(Rampho))
### print the first sequence
### (can be done with `Rampho$U15717' as well)
Rampho[[1]]
### print the first sequence in a cleaner way
cat(Rampho[[1]],
", sep = "")
""
cat(Rampho[[1]], "", sep = "")
Rampho[[1]]
x <- c("X78312","Y13155","AJ748748")
getx <- read.GenBank(x)
### get the species names:
attr(getx, "species")
### build a matrix with the species names and the accession numbers:
cbind(attr(getx, "species"), names(getx))
devtools::install_github("ropensci/taxize")
install.packages("devtools", dependencies = TRUE)
devtools::install_github("ropensci/taxize")
devtools::install_github("taxize", "ropensci")
library('taxize')
specieslist <- c("Abies procera","Pinus contorta")
classification(specieslist, db = 'itis')
classification(specieslist, db = 'ncbi')
ref <- c("AY376163","AY965999","AY679161","X65589","Y08845","O74523","EU489741",
"EF620474","CP000269","AY387012","DQ205303","AM493906","AY728038","AM085762",
"AY676462","AF543312","DQ150563","DQ188986","AJ310394","X92555",
"AY061962","U49757","AM397630")
## Not run:
Rampho <- read.GenBank(ref)
### get the species names:
attr(Rampho, "species")
library(ape)
Rampho <- read.GenBank(ref)
Rampho <- read.GenBank(ref)
attr(Rampho, "species")
ref <- "ABO74523"
## Not run:
Rampho <- read.GenBank(ref,as.character = FALSE)
### get the species names:
attr(Rampho, "species")
### build a matrix with the species names and the accession numbers:
ref <- "AB074523"
## Not run:
Rampho <- read.GenBank(ref,as.character = FALSE)
### get the species names:
attr(Rampho, "species")
ref <- "ABO74523"
## Not run:
Rampho <- read.GenBank(ref,as.character = FALSE)
### get the species names:
attr(Rampho, "species")
ref <- c("AY376163","AY965999","AY679161","X65589","Y08845","O74523","EU489741",
"EF620474","CP000269","AY387012","DQ205303","AM493906","AY728038","AM085762",
"AY676462","AF543312","DQ150563","DQ188986","AJ310394","X92555",
"AY061962","U49757","AM397630")
Rampho <- read.GenBank(ref,as.character = FALSE)
### get the species names:
attr(Rampho, "species")
### build a matrix with the species names and the accession numbers:
cbind(attr(Rampho, "species"), names(Rampho))
ref <- c("AY376163","AY965999","AY679161","X65589","Y08845","O74523","EU489741",
"EF620474","CP000269","AY387012","DQ205303","AM493906","AY728038","AM085762",
"AY676462","AF543312","DQ150563","DQ188986","AJ310394","X92555",
"AY061962","U49757","AM397630")
## Not run:
Rampho <- read.GenBank(ref,as.character = FALSE)
### get the species names:
attr(Rampho, "species")
### build a matrix with the species names and the accession numbers:
cbind(attr(Rampho, "species"), names(Rampho))
ref <- c("U15717", "U15718", "U15719", "U15720",
"U15721", "U15722", "U15723", "U15724")
Rampho <- read.GenBank(ref,as.character = TRUE)
library(ape)
#http://www.inside-r.org/packages/cran/ape/docs/read.GenBank
ref <- c("U15717", "U15718", "U15719", "U15720",
"U15721", "U15722", "U15723", "U15724")
### Copy/paste or type the following commands if you
### want to try them.
#ref <- c("AY376163","AY965999","AY679161","X65589","Y08845","O74523","EU489741",
"EF620474","CP000269","AY387012","DQ205303","AM493906","AY728038","AM085762",
"AY676462","AF543312","DQ150563","DQ188986","AJ310394","X92555",
"AY061962","U49757","AM397630")
## Not run:
Rampho <- read.GenBank(ref,as.character = TRUE)
### get the species names:
attr(Rampho, "species")
### build a matrix with the species names and the accession numbers:
cbind(attr(Rampho, "species"), names(Rampho))
zz <- attr(Rampho, "species")
zz
library('taxize')
zz <- attr(Rampho, "species")
zz
# ape to taxize
classification(zz, db = 'ncbi')
yy <- classification(zz, db = 'ncbi')
typeof(yy)
setwd("/home/ross/Downloads/peterijsem/tesseracted")
write.csv(yy, file="yyout.csv")
yy
yy$[0]
yy$[1]
yy$(1)
yy$1
yy$[[1]]
yy$[[0]]
yy$[[Ramphocelus_bresilius]]
yy$[Ramphocelus_bresilius]
yy$Ramphocelus_bresilius
x <- c("X78312","Y13155","AJ748748")
getx <- read.GenBank(x)
y2y <- attr(getx, "species")
### build a matrix with the species names and the accession numbers:
yxy <- cbind(attr(getx, "species"), names(getx))
yxy
zing <- classification(y2y, db = 'ncbi')
zing
y2y
classification(x, db = 'ncbi')
y2y
getx <- read.GenBank(x)
getx
getx
write.dna(x, file="blah.fasta", format = "interleaved", append = FALSE,
nbcol = 6, colsep = " ", colw = 10, indent = NULL,
blocksep = 1)
write.dna(getx, file="blah.fasta", format = "interleaved", append = FALSE,
nbcol = 6, colsep = " ", colw = 10, indent = NULL,
blocksep = 1)
write.dna(getx, file="blah.fasta", format = "fasta", append = FALSE,
nbcol = 6, colsep = " ", colw = 10, indent = NULL,
blocksep = 1)
install.packages("rentrez")
library(rentrez)
hox_paper <- entrez_search(db="pubmed", term="10.1099/ijs.0.019976-0[doi]")
hox_paper
install.packages("reutils")
library(reutils)
brang <- efetch(x, db = "nuccore")
brang
save(brang,file="brang.out")
